<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.javaclassS10.dao.MeetupDAO">
	<select id="getAllMeetup" resultType="com.spring.javaclassS10.vo.MeetupVO">
		<if test="member == 'yes'">
		select * from meetup where idx in (select meetupIdx from meetupMember m where m.mid = #{mid} and m.canceled = false) and expired = false order by meetingDate, meetingTime
		</if>
		<if test="member == 'no'">
		select * from meetup where idx NOT in (select meetupIdx from meetupMember m where m.mid = #{mid}) and expired = false order by meetingDate, meetingTime;
		</if>
		<if test="member == 'all'">
		select * from meetup where expired = false order by meetingDate, meetingTime
		</if>
		
		
	</select>
	<select id="getMeetup" resultType="com.spring.javaclassS10.vo.MeetupVO">
		select * from meetup where mapx = #{mapX} and mapy= #{mapY};
	</select>
	
	<select id="getMeetupList" resultType="com.spring.javaclassS10.vo.MeetupVO">
		
		SELECT u.*, COUNT(m.meetupIdx) AS curNumber FROM meetup u LEFT JOIN meetupMember m ON u.idx = m.meetupIdx where u.idx = #{idx} and m.canceled = false GROUP BY u.idx;
	</select>
	
	<select id="getMeetupListAll" resultType="com.spring.javaclassS10.vo.MeetupVO">
		SELECT u.*, COUNT(m.meetupIdx) AS curNumber FROM meetup u LEFT JOIN meetupMember m ON u.idx = m.meetupIdx where m.canceled = false GROUP BY u.meetingDate desc, u.meetingTime;
	</select>

	<select id="getMeetupMember" resultType="com.spring.javaclassS10.vo.MeetupMemberVO" >
		select *from meetupMember where meetupIdx=#{idx} and mid=#{mid} and canceled = false;
	</select>
	
	<select id="getMeetupMemberAll" resultType="com.spring.javaclassS10.vo.MeetupMemberVO" >
		select t.*, m.photo, m.levelM, m.tel, m.firstName, m.email from meetupMember t join member2 m on t.mid = m.mid where t.meetupIdx=#{idx} and t.canceled = false
	</select>
	
	<select id="getWaitedList" resultType="com.spring.javaclassS10.vo.MeetupMemberVO" >
		select t.*, m.photo, m.levelM, m.tel, m.firstName, m.email from meetupWaiting t join member2 m on t.mid = m.mid where t.meetupIdx=#{idx} order by idx
	</select>

	<select id="getWaitingList" resultType="int">
		select count(*) from meetupWaiting where meetupIdx=#{idx} and mid=#{mid}
	</select>
	
	<select id="getCanceledList" resultType="int">
		select count(*) from meetupMember where meetupIdx=#{idx} and mid=#{mid} and canceled = true;
	</select>
	
	<select id="getMeetupStatus" resultType="com.spring.javaclassS10.vo.MeetupStatusVO" >
		select * from meetupStatus where meetupIdx = #{idx} order by notice desc, idx desc 
	</select>
	
	<select id="getClubPoint" resultType="int">
		SELECT SUM(point) FROM meetupMember where mid= #{mid}
	</select>
	
	<select id="getMemberDetail" resultType="com.spring.javaclassS10.vo.MeetupMemberVO" >
		select (SELECT SUM(point) FROM meetupMember where mid= #{mid}) as point, (select count(*) from meetup where host =#{mid}) as hostCnt,
		(select count(*) from meetupMember where mid =#{mid}) as joinCnt
	</select>
	
	<insert id="meetupCreate" useGeneratedKeys="true" keyProperty="idx" >
		insert into meetup values(default,#{vo.host}, #{vo.contentid},#{vo.title},#{vo.addr},#{vo.firstimage},#{vo.eventstartdate},#{vo.eventenddate},#{vo.mapx},#{vo.mapy},#{vo.meetingDate},#{vo.meetingTime},#{vo.memNumber},#{vo.description}, default, default)
	</insert>
	
	<insert id="setMeetupMember">
		insert into meetupMember values (default, #{meetupIdx}, #{mid}, default, default, default)
	</insert>
	
	<insert id="setMeetupWaiting">
		insert into meetupWaiting values (default, #{idx}, #{mid}, default)
	</insert>
	
	<insert id="updateStatus">
		<if test="notice == false">
		insert into meetupStatus values (default, #{idx}, #{content}, default, default);
		</if>
		
		<if test="notice == true">
		insert into meetupStatus values (default, #{idx}, #{content}, true, default);
		</if>
	</insert>
	
	<update id="pointUpgrade" >
		<if test="flag == 'plus'">
		update meetupMember set point = point + #{amount} where meetupIdx = #{meetupIdx} and mid=#{mid}	
		</if>
		
		<if test="flag == 'use'">
		update meetupMember set point = point - #{amount} where meetupIdx = #{meetupIdx} and mid=#{mid}		
		</if>
	
	</update>
	
	<update id="updateMeetUpEdit">
		update meetup set meetingDate =#{vo.meetingDate}, meetingTime = #{vo.meetingTime}, memNumber = #{vo.memNumber} where idx = #{vo.idx}
	</update>
	
	<update id="cancelMeetup">
		update meetupMember set canceled = true where meetupIdx = #{meetupIdx} and mid =#{mid}
	</update>
	
	<update id="updateMeetUpExpired">
		update meetup set expired = true where meetingDate &lt; #{strToday}
	</update>
	
	<delete id="deleteNotice">
		delete from meetupStatus where idx =#{idx}
	</delete>
	
	<delete id="deleteWaitedList">
		delete from meetupWaiting where meetupIdx =#{idx} and mid=#{mid}
	</delete>
	
	<delete id="deleteMeetUp">
		delete from meetup where idx = #{idx}
	</delete>
	
	
</mapper>